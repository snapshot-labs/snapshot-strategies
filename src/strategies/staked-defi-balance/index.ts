import { BigNumber } from '@ethersproject/bignumber';
import { getAddress } from '@ethersproject/address';
import { subgraphRequest, multicall } from '../../utils';

const abi = [
    {
       "inputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"constructor"
    },
    {
       "anonymous":false,
       "inputs":[
          {
             "indexed":false,
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"uint256",
             "name":"amountPaid",
             "type":"uint256"
          }
       ],
       "name":"BasePaid",
       "type":"event"
    },
    {
       "anonymous":false,
       "inputs":[
          {
             "indexed":true,
             "internalType":"address",
             "name":"previousOwner",
             "type":"address"
          },
          {
             "indexed":true,
             "internalType":"address",
             "name":"newOwner",
             "type":"address"
          }
       ],
       "name":"OwnershipTransferred",
       "type":"event"
    },
    {
       "anonymous":false,
       "inputs":[
          {
             "indexed":false,
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"uint256",
             "name":"rewardAmount",
             "type":"uint256"
          }
       ],
       "name":"RewardAdded",
       "type":"event"
    },
    {
       "anonymous":false,
       "inputs":[
          {
             "indexed":false,
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address[]",
             "name":"rewardTokens",
             "type":"address[]"
          },
          {
             "indexed":false,
             "internalType":"uint256[]",
             "name":"rewards",
             "type":"uint256[]"
          }
       ],
       "name":"RewardPaid",
       "type":"event"
    },
    {
       "anonymous":false,
       "inputs":[
          {
             "indexed":false,
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"tokenAddress",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "indexed":false,
             "internalType":"uint256",
             "name":"amount",
             "type":"uint256"
          }
       ],
       "name":"Staked",
       "type":"event"
    },
    {
       "inputs":[
          
       ],
       "name":"VERSION",
       "outputs":[
          {
             "internalType":"string",
             "name":"",
             "type":"string"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          }
       ],
       "name":"addMarginalReward",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          }
       ],
       "name":"addMarginalRewardToPool",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "name":"admins",
       "outputs":[
          {
             "internalType":"enum StakingBasics.AdminRole",
             "name":"",
             "type":"uint8"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"allowedRewardTokenList",
       "outputs":[
          {
             "internalType":"address[]",
             "name":"",
             "type":"address[]"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          }
       ],
       "name":"allowedRewardTokens",
       "outputs":[
          {
             "internalType":"bool",
             "name":"",
             "type":"bool"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"baseToken",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"creationSigner",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"factory",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          }
       ],
       "name":"fakeRewardOf",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"rewardToken",
             "type":"address"
          }
       ],
       "name":"fakeRewardsTotal",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"freezeSweep",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"string",
             "name":"name",
             "type":"string"
          },
          {
             "internalType":"address[]",
             "name":"rewardTokens",
             "type":"address[]"
          }
       ],
       "name":"init",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          }
       ],
       "name":"initDefault",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "name":"inventory",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"isTokenizable",
       "outputs":[
          {
             "internalType":"bool",
             "name":"",
             "type":"bool"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"lockSeconds",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"name",
       "outputs":[
          {
             "internalType":"string",
             "name":"_name",
             "type":"string"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"owner",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"renounceOwnership",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "internalType":"address[]",
             "name":"rewardTokens",
             "type":"address[]"
          }
       ],
       "name":"rewardOf",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"rewardAddress",
             "type":"address"
          }
       ],
       "name":"rewardsTotal",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"admin",
             "type":"address"
          },
          {
             "internalType":"enum StakingBasics.AdminRole",
             "name":"role",
             "type":"uint8"
          }
       ],
       "name":"setAdmin",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"_signer",
             "type":"address"
          }
       ],
       "name":"setCreationSigner",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"_lockSeconds",
             "type":"uint256"
          }
       ],
       "name":"setLockSeconds",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"stake",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"stakeAmount",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"stakeFor",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"staker",
             "type":"address"
          }
       ],
       "name":"stakeOf",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"staker",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"allocation",
             "type":"uint256"
          },
          {
             "internalType":"bytes32",
             "name":"salt",
             "type":"bytes32"
          },
          {
             "internalType":"bytes",
             "name":"allocatorSignature",
             "type":"bytes"
          }
       ],
       "name":"stakeWithAllocation",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"stakedBalance",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "name":"stakings",
       "outputs":[
          {
             "internalType":"enum Staking.StakeType",
             "name":"stakeType",
             "type":"uint8"
          },
          {
             "internalType":"bool",
             "name":"restrictedRewards",
             "type":"bool"
          },
          {
             "internalType":"uint32",
             "name":"contribStart",
             "type":"uint32"
          },
          {
             "internalType":"uint32",
             "name":"contribEnd",
             "type":"uint32"
          },
          {
             "internalType":"uint32",
             "name":"endOfLife",
             "type":"uint32"
          },
          {
             "internalType":"uint32",
             "name":"configHardCutOff",
             "type":"uint32"
          },
          {
             "internalType":"uint16",
             "name":"flags",
             "type":"uint16"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"sweepBase",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"sweepFrozen",
       "outputs":[
          {
             "internalType":"bool",
             "name":"",
             "type":"bool"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address[]",
             "name":"rewardTokens",
             "type":"address[]"
          }
       ],
       "name":"sweepRewards",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"amount",
             "type":"uint256"
          }
       ],
       "name":"sweepToken",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"newOwner",
             "type":"address"
          }
       ],
       "name":"transferOwnership",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"bytes32",
             "name":"",
             "type":"bytes32"
          }
       ],
       "name":"usedHashes",
       "outputs":[
          {
             "internalType":"bool",
             "name":"",
             "type":"bool"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"amount",
             "type":"uint256"
          }
       ],
       "name":"withdraw",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          }
       ],
       "name":"withdrawRewards",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"id",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"staker",
             "type":"address"
          }
       ],
       "name":"withdrawTimeOf",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"",
             "type":"uint256"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    }
 ]

const stakingPoolContractAddress = '0xb4927895cbee88e651e0582893051b3b0f8d7db8';

async function strategy(
  network: string,
  provider: any,
  addresses: string[],
  options: any,
  snapshot: number | 'latest'
): Promise<Record<string, BigNumber>> {
  const blockTag = typeof snapshot === 'number' ? snapshot : 'latest';
  const query = {
    tokenStakers: {
      __args: {
        where: {
          id_in: addresses.map(address => address.toLowerCase())
        },
        first: 1000
      },
      id: true,
      stakedBalance: true
    }
  };

  const result = await subgraphRequest(options.subgraphUrl, query);
  const stakedBalances = result.tokenStakers.map(staker => {
    return {
      id: staker.id,
      stakedBalance: BigNumber.from(staker.stakedBalance)
    };
  });

  const stakingCalls = addresses.map(address => {
    return [
      stakingPoolContractAddress,
      'stakeOf',
      [options.tokenContractAddress, address]
    ];
  });

  const stakes = await multicall(network, provider, abi, stakingCalls, { blockTag });

  const stakesMapped = {};
  for (let i = 0; i < addresses.length; i++) {
    stakesMapped[getAddress(addresses[i])] = BigNumber.from(stakes[i]);
  }

  return Object.fromEntries(
    stakedBalances.map(staker => {
      const address = getAddress(staker.id);
      const stakedBalance = stakesMapped[address];
      return [
        address,
        stakedBalance.gte(options.minStakedBalance) ? staker.stakedBalance : BigNumber.from(0)
      ];
    })
  );
}

export default {
  name: 'Staked Defi Balance',
  token: 'cFRM', // Replace with the staked token's symbol
  version: '0.1.0',
  strategy
};
